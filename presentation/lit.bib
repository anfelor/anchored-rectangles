@STRING{ LNCS        = {{LNCS}}}
@STRING{ JFP         = {{J}ournal of {F}unctional {P}rogramming}}
@STRING{ AW          = {{A}ddison-{W}esley}}
@STRING{ SV          = {{S}pringer-{V}erlag}}
@STRING{ ACM         = {{ACM} press}}
@STRING{ CACM        = {{C}ommunications of the {ACM}}}
@STRING{ ICFP        = {the International Conference on Functional Programming ({ICFP})}}

@unpublished{Swift:scopedrc,
  author = {Matt Gallagher},
  title  = {Reference Counted Releases in {Swift}},
  year   = 2016,
  month  = dec,
  url    = {https://www.cocoawithlove.com/blog/resources-releases-reentrancy.html},
  note   = {Blog post}
}

@article{collins:method,
  title={A method for overlapping and erasure of lists},
  author={Collins, George E},
  journal={Communications of the ACM},
  volume={3},
  number={12},
  pages={655--657},
  year={1960},
  publisher={ACM New York, NY, USA}
}

@article{Leijen:mimalloc,
  author = {Leijen, Daan and Zorn Ben and de Moura, Leo},
  title  = {{Mimalloc}: Free List Sharding in Action},
  editors= {Lin A.},
  journal= {Programming Languages and Systems}, 
  series = {LNCS}, 
  volume = 11893,
  doi    = {10.1007/978-3-030-34175-6_13},
  year   = 2019,
  note   = {APLAS'19},
  publisher={Springer International Publishing}
}

@MISC{Mcbride:derivative,
  author = {McBride, Conor},
  title = {The Derivative of a Regular Type is its Type of One-Hole Contexts},
  note  = {(Extended Abstract)},
  url = {http://strictlypositive.org/diff.pdf},
  year = {2001}
}

@inproceedings{Reinking:perceus,
 author = {Reinking, Alex and Xie, Ningning and {de Moura}, Leonardo and Leijen, Daan},
 title = {Perceus: Garbage Free Reference Counting with Reuse},
 booktitle = {Proceedings of the 42rd ACM SIGPLAN Conference on Programming Language Design and Implementation},
 series = {PLDI '21},
 year = {2021},
 location = {Pittsburgh, USA},
 publisher = {ACM}
}

@inproceedings{Moura:refcount,
  author  = "Ullrich, Sebastian and {de Moura}, Leonardo",
  title   = "Counting Immutable Beans -- Reference counting optimized for purely functional programming",
  booktitle= "Proceedings of the 31st symposium on Implementation and Application of Functional Languages (IFL'19)",
  month   = sep,
  year    = 2019,
  location= {Singapore}
}

@inproceedings{Xie:evidently,
  author = {Xie, Ningning and Brachthäuser, Jonathan and Schuster, Phillip and Hillerström, Daniel and Leijen, Daan},
  title  = {Effect Handlers, Evidently},
  booktitle = {Proceedings of the 25th ACM SIGPLAN International Conference on Functional Programming (ICFP'2020)},
  series = {ICFP '20},
  location = {Jersey City, NJ},
  year   = 2020,
  month  = Aug
}

@inproceedings{mokhov:algebraic-graphs,
  author = {Mokhov, Andrey},
  title = {Algebraic Graphs with Class (Functional Pearl)},
  year = {2017},
  isbn = {9781450351829},
  publisher = {Association for Computing Machinery},
  address = {New York, NY, USA},
  doi = {10.1145/3122955.3122956},
  booktitle = {Proceedings of the 10th ACM SIGPLAN International Symposium on Haskell},
  pages = {2–13},
  numpages = {12},
  keywords = {Haskell, algebra, graph theory},
  location = {Oxford, UK},
  series = {Haskell 2017}
}

@inproceedings{guibas:redblack,
  title={A dichromatic framework for balanced trees},
  author={Guibas, Leo J and Sedgewick, Robert},
  booktitle={19th Annual Symposium on Foundations of Computer Science (sfcs 1978)},
  pages={8--21},
  year={1978},
  organization={IEEE}
}

@book{cormen:introduction-to-algorithms,
  title={Introduction to algorithms},
  author={Cormen, Thomas H and Leiserson, Charles E and Rivest, Ronald L and Stein, Clifford},
  year={2009},
  publisher={MIT press}
}

@book{okasaki:book,
  title={Purely functional data structures},
  author={Okasaki, Chris},
  year={1999},
  publisher={Cambridge University Press}
}

@article{sleator:splay,
  title={Self-adjusting binary search trees},
  author={Sleator, Daniel Dominic and Tarjan, Robert Endre},
  journal={Journal of the ACM (JACM)},
  volume={32},
  number={3},
  pages={652--686},
  year={1985},
  publisher={ACM New York, NY, USA}
}

@article{adams:weight-balanced,
  title={Functional pearls: Efficient sets—a balancing act},
  author={Adams, Stephen},
  journal={Journal of functional programming},
  volume={3},
  number={4},
  pages={553--561},
  year={1993},
  publisher={Cambridge University Press}
}

@article{hirai:weight-balanced,
  title={Balancing weight-balanced trees},
  author={Hirai, Yoichi and Yamamoto, Kazuhiko},
  journal={Journal of Functional Programming},
  volume={21},
  number={3},
  pages={287--307},
  year={2011},
  publisher={Cambridge University Press}
}

@inproceedings{flanagan:essence,
  title={The essence of compiling with continuations},
  author={Flanagan, Cormac and Sabry, Amr and Duba, Bruce F and Felleisen, Matthias},
  booktitle={Proceedings of the ACM SIGPLAN 1993 conference on Programming language design and implementation},
  pages={237--247},
  year={1993}
}

@article{jones:secrets,
  title={Secrets of the glasgow haskell compiler inliner},
  author={Jones, Simon Peyton and Marlow, Simon},
  journal={Journal of Functional Programming},
  volume={12},
  number={4-5},
  pages={393--434},
  year={2002},
  publisher={Cambridge University Press}
}

@article{friedman:unwinding,
  title={Unwinding stylized recursions into iterations},
  author={Friedman, D and Wise, S},
  journal={Comput. Sci. Dep., Indiana University, Bloomington, IN, Tech. Rep},
  volume={19},
  year={1975}
}

@misc{bour:ocaml-tmc,
  title={Tail Modulo Cons}, 
  author={Frédéric Bour and Basile Clément and Gabriel Scherer},
  year={2021},
  eprint={2102.09823},
  archivePrefix={arXiv},
  primaryClass={cs.PL}
}

@misc{debian-benchmarksgame-binary-trees,
  title={Binary Trees - The Computer Language Benchmarks Game},
  author={Contributors},
  url={https://benchmarksgame-team.pages.debian.net/benchmarksgame/performance/binarytrees.html},
  year={2021},
}

@article{selsam:pure-pointers,
author = {Selsam, Daniel and Hudon, Simon and de Moura, Leonardo},
title = {Sealing Pointer-Based Optimizations behind Pure Functions},
year = {2020},
issue_date = {August 2020},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {4},
number = {ICFP},
url = {https://doi.org/10.1145/3408997},
doi = {10.1145/3408997},
journal = {Proc. ACM Program. Lang.},
month = aug,
articleno = {115},
numpages = {20},
keywords = {functional programming, interactive theorem proving, Lean}
}

@article{appel:safe-for-space,
  title={Closure conversion is safe for space},
  author={Paraskevopoulou, Zoe and Appel, Andrew W},
  journal={Proceedings of the ACM on Programming Languages},
  volume={3},
  number={ICFP},
  pages={1--29},
  year={2019},
  publisher={ACM New York, NY, USA}
}

@inproceedings{wadler:linear-world,
  title={Linear types can change the world!},
  author={Wadler, Philip},
  booktitle={Programming concepts and methods},
  volume={3},
  number={4},
  pages={5},
  year={1990},
  organization={University of Glasgow}
}

@misc{carp:memory,
  title={Carp Documentation: Memory management - a closer look},
  author={The Carp Community},
  url={https://github.com/carp-lang/Carp/blob/master/docs/Memory.md},
  year={2021},
  shorthand={Carp21}
}

@article{mccarthy:tracing-gc,
  title={Recursive functions of symbolic expressions and their computation by machine, part I},
  author={McCarthy, John},
  journal={Communications of the ACM},
  volume={3},
  number={4},
  pages={184--195},
  year={1960},
  publisher={ACM New York, NY, USA}
}

@article{haddon:compaction,
  title={A compaction procedure for variable-length storage elements},
  author={Haddon, Bruce K and Waite, William M},
  journal={The Computer Journal},
  volume={10},
  number={2},
  pages={162--165},
  year={1967},
  publisher={The British Computer Society}
}

@article{lieberman:generational-gc,
  title={A real-time garbage collector based on the lifetimes of objects},
  author={Lieberman, Henry and Hewitt, Carl},
  journal={Communications of the ACM},
  volume={26},
  number={6},
  pages={419--429},
  year={1983},
  publisher={ACM New York, NY, USA}
}

@inproceedings{moon:generational-gc,
  title={Garbage collection in a large Lisp system},
  author={Moon, David A},
  booktitle={Proceedings of the 1984 ACM Symposium on LISP and Functional Programming},
  pages={235--246},
  year={1984}
}

@article{ungar:generational-gc,
  title={Generation scavenging: A non-disruptive high performance storage reclamation algorithm},
  author={Ungar, David},
  journal={ACM Sigplan notices},
  volume={19},
  number={5},
  pages={157--167},
  year={1984},
  publisher={ACM New York, NY, USA}
}

@inproceedings{choi:biased-rc,
  title={Biased reference counting: Minimizing atomic operations in garbage collection},
  author={Choi, Jiho and Shull, Thomas and Torrellas, Josep},
  booktitle={Proceedings of the 27th International Conference on Parallel Architectures and Compilation Techniques},
  pages={1--12},
  year={2018}
}

@article{deutsch:deferred-rc,
  title={An efficient, incremental, automatic garbage collector},
  author={Deutsch, L Peter and Bobrow, Daniel G},
  journal={Communications of the ACM},
  volume={19},
  number={9},
  pages={522--526},
  year={1976},
  publisher={ACM New York, NY, USA}
}

@inproceedings{sobel:recycling-continuations,
  title={Recycling continuations},
  author={Sobel, Jonathan and Friedman, Daniel P},
  booktitle={Proceedings of the third ACM SIGPLAN international conference on Functional programming},
  pages={251--260},
  year={1998}
}

@misc{boost:rc,
  title={Boost documentation: Reference counting},
  author={Semashev, Andrey and Blechmann, Tim and Bahmann, Helge},
  year={2021},
  url={https://www.boost.org/doc/libs/1_77_0/doc/html/atomic/usage_examples.html#boost_atomic.usage_examples.example_reference_counters},
}

@misc{intel:memory-order,
  title={Intel® 64 and IA-32 Architectures Software Developer’s Manual, Volume 3A: 8.2 Memory Ordering},
  author={Intel Corporation},
  url={https://software.intel.com/content/www/us/en/develop/download/intel-64-and-ia-32-architectures-sdm-volume-3a-system-programming-guide-part-1.html},
  year={2015},
  shorthand={Int15},
}

@misc{arm:memory-order,
  title={ARMv8-A Memory systems: The memory model},
  author={Arm Ltd.},
  url={https://developer.arm.com/documentation/100941/0100/The-memory-model?lang=en},
  year={2021},
  shorthand={Arm21},
}

@misc{cpp:memory-order,
  title={std::memory\_order},
  author={cppreference},
  year={2021},
  url={https://en.cppreference.com/w/cpp/atomic/memory_order},
}

@inproceedings{maurer:join-points,
  title={Compiling without continuations},
  author={Maurer, Luke and Downen, Paul and Ariola, Zena M and Peyton Jones, Simon},
  booktitle={Proceedings of the 38th ACM SIGPLAN Conference on Programming Language Design and Implementation},
  pages={482--494},
  year={2017}
}

@article{huet:zipper,
  title={The zipper},
  author={Huet, G{\'e}rard},
  journal={Journal of functional programming},
  volume={7},
  number={5},
  pages={549--554},
  year={1997},
  publisher={Cambridge University Press}
}

@article{schorr-waite:linkinv,
author = {Schorr, H. and Waite, W. M.},
title = {An Efficient Machine-Independent Procedure for Garbage Collection in Various List Structures},
year = {1967},
issue_date = {Aug. 1967},
publisher = {Association for Computing Machinery},
address = {New York, NY, USA},
volume = {10},
number = {8},
issn = {0001-0782},
url = {https://doi.org/10.1145/363534.363554},
doi = {10.1145/363534.363554},
abstract = {A method for returning registers to the free list is an essential part of any list processing system. In this paper, past solutions of the recovery problem are reviewed and compared. A new algorithm is presented which offers significant advantages of speed and storage utilization. The routine for implementing this algorithm can be written in the list language with which it is to be used, thus insuring a degree of machine independence. Finally, the application of the algorithm to a number of different list structures appearing in the literature is indicated.},
journal = {Commun. ACM},
month = {aug},
pages = {501–506},
numpages = {6}
}

@inproceedings{hertz:gcvsmalloc,
  title={Quantifying the performance of garbage collection vs. explicit memory management},
  author={Hertz, Matthew and Berger, Emery D},
  booktitle={Proceedings of the 20th annual ACM SIGPLAN conference on Object-oriented programming, systems, languages, and applications},
  pages={313--326},
  year={2005}
}

@article{plotkin:generic-effects,
  title={Algebraic operations and generic effects},
  author={Plotkin, Gordon and Power, John},
  journal={Applied categorical structures},
  volume={11},
  number={1},
  pages={69--94},
  year={2003},
  publisher={Springer}
}

@inproceedings{plotkin:handlers,
  title={Handlers of algebraic effects},
  author={Plotkin, Gordon and Pretnar, Matija},
  booktitle={European Symposium on Programming},
  pages={80--94},
  year={2009},
  organization={Springer}
}

@article{xie:efficient-effects,
  title={Generalized evidence passing for effect handlers: efficient compilation of effect handlers to C},
  author={Xie, Ningning and Leijen, Daan},
  journal={Proceedings of the ACM on Programming Languages},
  volume={5},
  number={ICFP},
  pages={1--30},
  year={2021},
  publisher={ACM New York, NY, USA}
}

@article{lorenzen:reuse,
  title={Reference Counting with Frame Limited Reuse},
  author={Lorenzen, Anton and Leijen, Daan},
  journal={MSR-TR-2021-30},
  year={2021},
}
